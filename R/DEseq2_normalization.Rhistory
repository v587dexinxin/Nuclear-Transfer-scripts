library("DESeq2")
library("RColorBrewer")
library("gplots")
library("gplots")
library("amap")
library("ggplot2")
library("BiocParallel")
data <- read.table("F:/work/ntESC_3Dreprogramming/Workspace_New/data/RNA/reads_count/merged.csv", header=T, row.names=1, sep=",")
data <- data[rowSums(data)>2,]
head(data)
sample <- read.table("F:/work/ntESC_3Dreprogramming/Workspace_New/data/RNA/reads_count/sampleFile.csv", header=T, row.names=1, com='',
quote='', check.names=F, sep=",", colClasses="factor")
sample
data
ddsFullCountTable <- DESeqDataSetFromMatrix(countData = data, colData = sample,  design= ~ batch + conditions)
ddsFullCountTable
dds <- DESeq(ddsFullCountTable)
normalized=T
normalized_counts <- counts(dds, normalized=TRUE)
head(normalized_counts)
normalized_counts_mad <- apply(normalized_counts, 1, mad)
normalized_counts <- normalized_counts[order(normalized_counts_mad, decreasing=T), ]
normalized_counts
write.table(normalized_counts, file="F:/work/ntESC_3Dreprogramming/Workspace_New/data/RNA/reads_count/ehbio_trans.Count_matrix.DESeq2.normalized.csv", quote=F, sep=",", row.names=T, col.names=T)
rld <- rlog(dds, blind=FALSE)
rlogMat <- assay(rld)
rlogMat <- rlogMat[order(normalized_counts_mad, decreasing=T), ]
write.table(rlogMat, file="ehbio_trans.Count_matrix.xls.DESeq2.normalized.rlog.xls",quote=F, sep="\t", row.names=T, col.names=T)
hmcol <- colorRampPalette(brewer.pal(9, "GnBu"))(100)
pearson_cor <- as.matrix(cor(rlogMat, method="pearson"))
hc <- hcluster(t(rlogMat), method="pearson")
hM <- format(round(pearson_cor, 3))
pdf("F:/work/ntESC_3Dreprogramming/Workspace_New/data/RNA/reads_count/RNA_correlation_heatmap_remove_batch.pdf", pointsize=10)
heatmap.2(pearson_cor, Rowv=as.dendrogram(hc), symm=T, trace="none", col=hmcol, margins=c(11,11), main="The pearson correlation of eachsample" , cellnote = hM,notecol='black')
getwd()
dev.off()
pca_data <- plotPCA(rld, intgroup=c("conditions"), returnData=T, ntop=5000)
sampleA = "CCS"
sampleB = "ESC"
sampleC = "NTs"
contrastV <- c("conditions", sampleB, sampleC)
res <- results(dds,  contrast=contrastV)
res
pca_data <- plotPCA(rld, intgroup=c("conditions"), returnData=T, ntop=5000)
plotPCA(rld, intgroup=c("conditions"), returnData=T, ntop=5000)
pca_data
?plotPCA
dev.copy(pca_data,'Deseq2_pca.png')
dev.copy(png,'Deseq2_pca.png')
plotPCA(rld, intgroup=c("conditions"), returnData=T, ntop=5000)
dev.copy(png,'Deseq2_pca.png')
plotPCA(rld, intgroup=c("conditions"))
dev.copy(png,'Deseq2_pca.png')
dev.copy(pdf,'Deseq2_pca.pdf')
dev.off()
dev.off()
plotPCA(rld, intgroup=c("conditions"))
plotPCA(rld, intgroup=c("conditions"), returnData=T, ntop=5000)
plotPCA(rld, intgroup=c("conditions"))
plotPCA(rld, intgroup=c("conditions"))
plotPCA(rld, intgroup=c("conditions"))
plotPCA(rld, intgroup=c("conditions"))
dev.copy(png,'Deseq2_pca.png')
plotPCA(rld, intgroup=c("conditions"))
res <- results(dds,  contrast=contrastV)
pca_data <- plotPCA(rld, intgroup=c("conditions"), returnData=T, ntop=5000)
rld <- rlog(dds, blind=FALSE)
rlogMat <- assay(rld)
rlogMat <- rlogMat[order(normalized_counts_mad, decreasing=T), ]
hmcol <- colorRampPalette(brewer.pal(9, "GnBu"))(100)
pearson_cor <- as.matrix(cor(rlogMat, method="pearson"))
hc <- hcluster(t(rlogMat), method="pearson")
pca_data <- plotPCA(rld, intgroup=c("conditions"), returnData=T, ntop=5000)
View(pca_data)
plotPCA(rld, intgroup=c("conditions"), returnData=T, ntop=5000)
plotPCA(rld, intgroup=c("conditions"))
plotPCA(rld, intgroup=c("conditions"))
pdf("PCA.pdf", pointsize=10)
plotPCA(rld, intgroup=c("conditions"))
dev.off()
plotPCA(rld, intgroup=c("conditions"))
savehistory("F:/work/ntESC_3Dreprogramming/data_analysis/Script_New/R/DEseq2_normalization.Rhistory")
