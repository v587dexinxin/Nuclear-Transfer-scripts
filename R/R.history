library('DESeq2')
condition <- factor(c(rep("CCS",3), rep("NT5",4)))
database_all <- read.table(file = "D:/Workspace_New/data/RNA/reads_count/merged.csv", sep = ",", header = T)
database <- database_all[,2:8]
coldata <- data.frame(row.names = colnames(database), condition)
dds <- DESeqDataSetFromMatrix(countData=database, colData=coldata, design=~condition)
dds1 <- DESeq(dds)
res <- results(dds1)
res
colnames(database_all)
colnames(database_all)[0] = 'GeneID'
colnames(database_all)
View(database_all)
library('DESeq2')
condition <- factor(c(rep("CCS",3), rep("NT5",4)))
database_all <- read.table(file = "D:/Workspace_New/data/RNA/reads_count/merged.csv", sep = ",", header = T)
database <- database_all[,2:8]
coldata <- data.frame(row.names = colnames(database), condition)
dds <- DESeqDataSetFromMatrix(countData=database, colData=coldata, design=~condition)
dds1 <- DESeq(dds)
res <- results(dds1)
res
a <- data.frame(GeneID = database_all$GeneID , baseMean = res$baseMean , log2FoldChange = res$log2FoldChange , lfcSE = res$lfcSE , stat = res$stat , pvalue = res$pvalue , padj = res$padj)
View(a)
a
res <- a[order(a$padj) , ]
View(res)
View(a)
View(res)
View(res)
write.csv(res , 'D:\\Workspace_New\\data\\RNA\\diff_expression\\CCS_NT5.csv')
condition <- factor(c(rep("CCS",3), rep("NT6",3)))
View(database)
database <- data.frame(database_all$CCS_R1 , database_all$CCS_R2 , database_all$CCS_R3 , database_all$NT6_R1 , database_all$NT6_R2 , database_all$NT6_R3)
View(database)
database <- data.frame(CCS_R1 = database_all$CCS_R1 , CCS_R2 = database_all$CCS_R2 , CCS_R3 = database_all$CCS_R3 , NT6_R1 = database_all$NT6_R1 , NT6_R2 = database_all$NT6_R2 , NT6_R3 = database_all$NT6_R3)
View(database)
coldata <- data.frame(row.names = colnames(database), condition)
dds <- DESeqDataSetFromMatrix(countData=database, colData=coldata, design=~condition)
dds1 <- DESeq(dds)
dds1 <- DESeq(dds)
res <- results(dds1)
a <- data.frame(GeneID = database_all$GeneID , baseMean = res$baseMean , log2FoldChange = res$log2FoldChange , lfcSE = res$lfcSE , stat = res$stat , pvalue = res$pvalue , padj = res$padj)
write.csv(a , 'D:\\Workspace_New\\data\\RNA\\diff_expression\\CCS_NT6.csv')
res <- a[order(a$padj) , ]
write.csv(res , 'D:\\Workspace_New\\data\\RNA\\diff_expression\\CCS_NT6.csv')
savehistory("C:/Users/Administrator/Desktop/1.Rhistory")
condition <- factor(c(rep("CCS",3), rep("fESC",3)))
database <- data.frame(database_all$CCS_R1 , database_all$CCS_R2 , database_all$CCS_R3 , database_all$fESC_R1 , database_all$fESC_R2 , database_all$fESC_R3)
database <- data.frame(CCS_R1 = database_all$CCS_R1 , CCS_R2 = database_all$CCS_R2 , CCS_R3 = database_all$CCS_R3 , fESC_R1 = database_all$fESC_R1 , fESC_R2 = database_all$fESC_R2 , fESC_R3 = database_all$fESC_R3)
View(database)
coldata <- data.frame(row.names = colnames(database), condition)
coldata
dds <- DESeqDataSetFromMatrix(countData=database, colData=coldata, design=~condition)
dds1 <- DESeq(dds)
res <- results(dds1)
a <- data.frame(GeneID = database_all$GeneID , baseMean = res$baseMean , log2FoldChange = res$log2FoldChange , lfcSE = res$lfcSE , stat = res$stat , pvalue = res$pvalue , padj = res$padj)
res <- a[order(a$padj) , ]
write.csv(res , 'D:\\Workspace_New\\data\\RNA\\diff_expression\\CCS_fESC.csv')
condition <- factor(c(rep("fESC",3), rep("NT5",3)))
database <- data.frame(fESC_R1 = database_all$fESC_R1 , fESC_R2 = database_all$fESC_R2 , fESC_R3 = database_all$fESC_R3 , NT5_R1 = database_all$NT5_R1 , NT5_R2 = database_all$NT5_R2 , NT5_R3 = database_all$NT5_R3)
View(database)
database <- data.frame(fESC_R1 = database_all$fESC_R1 , fESC_R2 = database_all$fESC_R2 , fESC_R3 = database_all$fESC_R3 , NT5_R1 = database_all$NT5_R1 , NT5_R2 = database_all$NT5_R2 , NT5_R3 = database_all$NT5_R3 , NT5_R4 = database_all$NT5_R4)
View(database)
condition <- factor(c(rep("fESC",3), rep("NT5",4)))
coldata <- data.frame(row.names = colnames(database), condition)
coldata
dds <- DESeqDataSetFromMatrix(countData=database, colData=coldata, design=~condition)
dds1 <- DESeq(dds)
res <- results(dds1)
a <- data.frame(GeneID = database_all$GeneID , baseMean = res$baseMean , log2FoldChange = res$log2FoldChange , lfcSE = res$lfcSE , stat = res$stat , pvalue = res$pvalue , padj = res$padj)
res <- a[order(a$padj) , ]
write.csv(res , 'D:\\Workspace_New\\data\\RNA\\diff_expression\\CCS_fESC.csv')
write.csv(res , 'D:\\Workspace_New\\data\\RNA\\diff_expression\\fESC_NT5.csv')
condition <- factor(c(rep("CCS",3), rep("fESC",3)))
database <- data.frame(CCS_R1 = database_all$CCS_R1 , CCS_R2 = database_all$CCS_R2 , CCS_R3 = database_all$CCS_R3 , fESC_R1 = database_all$fESC_R1 , fESC_R2 = database_all$fESC_R2 , fESC_R3 = database_all$fESC_R3)
coldata <- data.frame(row.names = colnames(database), condition)
coldata
dds <- DESeqDataSetFromMatrix(countData=database, colData=coldata, design=~condition)
dds1 <- DESeq(dds)
res <- results(dds1)
a <- data.frame(GeneID = database_all$GeneID , baseMean = res$baseMean , log2FoldChange = res$log2FoldChange , lfcSE = res$lfcSE , stat = res$stat , pvalue = res$pvalue , padj = res$padj)
res <- a[order(a$padj) , ]
write.csv(res , 'D:\\Workspace_New\\data\\RNA\\diff_expression\\CCS_fESC.csv')
condition <- factor(c(rep("CCS",3), rep("NT6",3)))
condition <- factor(c(rep("fESC",3), rep("NT6",3)))
database <- data.frame(fESC_R1 = database_all$fESC_R1 , fESC_R2 = database_all$fESC_R2 , fESC_R3 = database_all$fESC_R3 , NT6_R1 = database_all$NT6_R1 , NT6_R2 = database_all$NT6_R2 , NT6_R3 = database_all$NT6_R3)
coldata <- data.frame(row.names = colnames(database), condition)
dds <- DESeqDataSetFromMatrix(countData=database, colData=coldata, design=~condition)
dds1 <- DESeq(dds)
res <- results(dds1)
a <- data.frame(GeneID = database_all$GeneID , baseMean = res$baseMean , log2FoldChange = res$log2FoldChange , lfcSE = res$lfcSE , stat = res$stat , pvalue = res$pvalue , padj = res$padj)
res <- a[order(a$padj) , ]
write.csv(res , 'D:\\Workspace_New\\data\\RNA\\diff_expression\\fESC_NT6.csv')
condition <- factor(c(rep("NT5",4), rep("NT6",3)))
database <- data.frame(NT5_R1 = database_all$NT5_R1 , NT5_R2 = database_all$NT5_R2 , NT5_R3 = database_all$NT5_R3 , NT5_R4 = database_all$NT5_R4 , NT6_R1 = database_all$NT6_R1 , NT6_R2 = database_all$NT6_R2 , NT6_R3 = database_all$NT6_R3)
coldata <- data.frame(row.names = colnames(database), condition)
dds <- DESeqDataSetFromMatrix(countData=database, colData=coldata, design=~condition)
dds1 <- DESeq(dds)
res <- results(dds1)
a <- data.frame(GeneID = database_all$GeneID , baseMean = res$baseMean , log2FoldChange = res$log2FoldChange , lfcSE = res$lfcSE , stat = res$stat , pvalue = res$pvalue , padj = res$padj)
res <- a[order(a$padj) , ]
write.csv(res , 'D:\\Workspace_New\\data\\RNA\\diff_expression\\NT5_NT6.csv')
save.image("F:/xxli/data_analysis/Script_New/RNA/diff_expression.rhistory.RData")
rm(list=ls())
library(corrplot)
install.packages("corrplot")
library(corrplot)
install.packages("pheatmap")
library(pheatmap)
c1 <- c(1,0.8949,0.8947,0.9055)
c2 <- c(0.8949,1,0.9647,9706)
c2 <- c(0.8947,0.947,1,0.9618)
c4 <- c(0.9055,0.9706,0.9618,1)
c2 c(0.8949,1,0.9647,9706)
c2 <- c(0.8949,1,0.9647,9706)
c3 <- c(0.8947,0.947,1,0.9618)
MT <- cbind(c1,c2,c3,c4)
MT
pheatmap(MT)
pheatmap(MT)
MT
c2 <- c(0.8949,1,0.9647,0.9706)
MT <- cbind(c1,c2,c3,c4)
pheatmap(MT)
pheatmap(MT,cluster_rows = F,cluster_cols = F)
pheatmap(MT,cluster_rows = F,cluster_cols = F,display_numbers = MT)
example("corrplot",package = "corrplot")
example("corrplot.mixed",package = "corrplot")
data<-read.table('D:\\Workspace_New\\data\\HiC\\Matrix\\matrix_correlation\\whole_chrom_correlation_matrix.txt')
data
View(data)
corrplot(data,method="color",order = "hclust",addCoef.col = "#ff0099")
cor_attitude<-round(data,3)
cor_attitude
corrplot(cor_attitude,method="color" , order = "hclust" , addCoef.col = "#ff0099")
corrplot(MT,method="color" , order = "hclust" , addCoef.col = "#ff0099")
data("attitude")
attitude
cor_attitude <- cor(attitude,method="spearman")
cor_attitude
data
cor_attitude<-round(cor_attitude,3)
cor_attitude
corrplot(cor_attitude,method="color" , order = "hclust" , addCoef.col = "#ff0099")
head(cor_attitude)
data<-read.table('D:\\Workspace_New\\data\\HiC\\Matrix\\matrix_correlation\\whole_chrom_correlation_matrix.txt')
data<-read.table('D:\\Workspace_New\\data\\HiC\\Matrix\\matrix_correlation\\whole_chrom_correlation_matrix.txt', header = TRUE)
corrplot(data,method="color" , order = "hclust" , addCoef.col = "#ff0099")
data
data[1,1]
data[1,2]
cor_attitude<-round(data,3)
corrplot(cor_attitude,method="color" , order = "hclust" , addCoef.col = "#ff0099")
df <- as.matrix(read.table("D:\\Workspace_New\\data\\HiC\\Matrix\\matrix_correlation\\whole_chrom_correlation_matrix.txt", row.names = 1))
colnames(df) <- c("CCS", "NT5", "NT6" , "fESC")
df
df <- as.matrix(read.table("D:\\Workspace_New\\data\\HiC\\Matrix\\matrix_correlation\\whole_chrom_correlation_matrix.txt", row.names = 1))
df
colnames(df)
data<-read.table('D:\\Workspace_New\\data\\HiC\\Matrix\\matrix_correlation\\whole_chrom_correlation_matrix.txt', header = TRUE)
colnames(data)
data_1 <- data.frame(CCS = data$CCS , NT5 = data$NT5 , NT6 = data$NT6 , fESC = data$fESC)
data_1
cor_attitude<-round(data_1,3)
corrplot(cor_attitude,method="color" , order = "hclust" , addCoef.col = "#ff0099")
corrplot(cor_attitude,method="color" ,  addCoef.col = "#ff0099")
data[1 , 2 ] + data[1,2]
pheatmap(data_1)
data_1
corrplot(MT,method="color" , order = "hclust" , addCoef.col = "#ff0099")
MT
data
data <- round(data,3)
data
data <-as.matrix(data)
View(data)
data
corrplot(data,method="color" , order = "hclust" , addCoef.col = "#ff0099")
corrplot(data , method="color" , order = "hclust" , addCoef.col = "#ff0099")
corrplot(data , method="color" , order = "hclust" , addCoef.col = "#ff0099")
pheatmap(data , cluster_cols = FALSE , cluster_rows = FALSE , display_numbers = data)
library('biomart')
install.packages('biomart')
source("http://bioconductor.org/biocLite.R")
biocLite("biomaRt")
library('biomaRt')
listMarts()
ensemble<-useMart("ensembl")
listDatasets(ensemble)
dataset<-useDataset("mmusculus_gene_ensembl",mart = ensemble)
dataset
filter<-listFilters(ensembl)
filter<-listFilters(ensembl)
ensemble<-useMart("ensembl")
listDatasets(ensemble)
dataset<-useDataset("mmusculus_gene_ensembl",mart = ensemble)
filter<-listFilters(ensemble)
ensemble
filter<-listFilters(dataset)
head(filter)
attributes<-listAttributes(dataset)
head(attributes)
ensg <- 'ENSG00000231942'
ensg
getBM(attributes = c("ensembl_gene_id","hgnc_symbol"),filters="ensembl_gene_id",values = ensg[1:10],mart = ensembl)
getBM(attributes = c("ensembl_gene_id","hgnc_symbol"),filters="ensembl_gene_id",values = ensg[1:10],mart = ensemble)
getBM(attributes = c("ensembl_gene_id","hgnc_symbol"),filters="ensembl_gene_id",values = ensg[1:10],mart = dataset)
ENSMUSG00000020241
ensg[1:10]
getBM(attributes = c("ensembl_gene_id","hgnc_symbol"),filters="ensembl_gene_id",values = ensg,mart = dataset)
getwd()
gene.id <- read.table("D:\Workspace_New\data\RNA\diff_expression\union_diff_gene_id.txt")
gene.id <- read.table(file.choose())
head(gene.id)
gene.id$newname <- strsplit(gene.id$V1,".")
install.packages("splitstackshape")
library(splitstackshape)
gene.id$newname <- cSplit(gene.id$V1,sep = ".", drop = F)
gene.id$newname <- cSplit(gene.id,"V1",sep = ".", drop = F)
head(gene.id)
gene.id <- read.table(file.choose())
gene.id <- read.table(file.choose())
head(gene.id)
gene.id$newname <- cSplit(gene.id,"V1",sep = ".", drop = F)
head(gene.id    )
gene.id <- read.table(file.choose())
head(gene.id    )
gene.id$newname <- cSplit(gene.id,"V1",sep = ".", drop = T)
gene.id <- read.table(file.choose())
head(gene.id    )
gene.id <- cSplit(gene.id,"V1",sep = ".", drop = F)
head(gene.id)
gene.id.char <- gene.id$V1_1
gene.id.char <- as.character(gene.id$V1_1)
gene.id.char
A <- gene.id$V1_1
A
getBM(attributes = c("ensembl_gene_id","hgnc_symbol"),filters="ensembl_gene_id",values = gene.id.char,mart = dataset)
dataset
dataset
head(dataset)
library('idr')
install.packages("idr")
library('idr')
CCS_data = read.table('D:\\Workspace_New\\data\\ATAC\\peaks\\CCS_Common_peaks.txt')
CCS_data = CCS_data[,8:9]
CCS_data
CCS_M = as.matrix(CCS_data)
CCS_M
CCS_out = est.IDR(CCS_M, mu, sigma, rho, p, eps=0.001,max.ite = 20)
mu <- 2.6
sigma <- 1.3
rho <- 0.8
p <- 0.7
CCS_out = est.IDR(CCS_M, mu, sigma, rho, p, eps=0.001,max.ite = 20)
CCS.selected = select.IDR(CCS_M,CCS_out$IDR,0.01)
write.table(CCS.selected$x,'D:\\Workspace_New\\data\\ATAC\\peaksCCS_R1_R3_selected.txt',row.names = FALSE,quote = FALSE,col.names = FALSE)
write.table(CCS.selected$x,'D:\\Workspace_New\\data\\ATAC\\peaks\\CCS_R1_R2_selected.txt',row.names = FALSE,quote = FALSE,col.names = FALSE)
NT5_data = read.table('D:\\Workspace_New\\data\\ATAC\\peaks\\NT5_R1_R2_Common_peaks.txt')
NT5_data = NT5_data[,8:9]
NT5_M = as.matrix(NT5_data)
NT5_out = est.IDR(NT5_M, mu, sigma, rho, p, eps=0.001,max.ite = 20)
NT5.selected = select.IDR(NT5_M,NT5_out$IDR,0.01)
write.table(NT5.selected$x,'D:\\Workspace_New\\data\\ATAC\\peaks\\NT5_R1_R3_selected.txt',row.names = FALSE,quote = FALSE,col.names = FALSE)
write.table(NT5.selected$x,'D:\\Workspace_New\\data\\ATAC\\peaks\\NT5_R1_R2_selected.txt',row.names = FALSE,quote = FALSE,col.names = FALSE)
NT6_data = read.table('D:\\Workspace_New\\data\\ATAC\\peaks\\NT6_R1_R2_Common_peaks.txt')
NT6_data = NT6_data[,8:9]
NT6_M = as.matrix(NT6_data)
NT6_out = est.IDR(NT6_M, mu, sigma, rho, p, eps=0.001,max.ite = 20)
NT6.selected = select.IDR(NT6_M,NT6_out$IDR,0.01)
write.table(NT6.selected$x,'D:\\Workspace_New\\data\\ATAC\\peaks\\NT6_R1_R2_selected.txt',row.names = FALSE,quote = FALSE,col.names = FALSE)
fESC_data = read.table('D:\\Workspace_New\\data\\ATAC\\peaks\\fESC_R1_R2_Common_peaks.txt')
fESC_data = fESC_data[,8:9]
fESC_M = as.matrix(fESC_data)
fESC_out = est.IDR(fESC_M, mu, sigma, rho, p, eps=0.001,max.ite = 20)
fESC.selected = select.IDR(fESC_M,fESC_out$IDR,0.01)
write.table(fESC.selected$x,'D:\\Workspace_New\\data\\ATAC\\peaks\\fESC_R1_R2_selected.txt',row.names = FALSE,quote = FALSE,col.names = FALSE)
fESC_data = read.table('D:\\Workspace_New\\data\\ATAC\\peaks\\fESC_R1_R2_Common_peaks.txt')
fESC_data = fESC_data[,8:9]
fESC_M = as.matrix(fESC_data)
fESC_out = est.IDR(fESC_M, mu, sigma, rho, p, eps=0.001,max.ite = 20)
fESC.selected = select.IDR(fESC_M,fESC_out$IDR,0.001)
write.table(fESC.selected$x,'D:\\Workspace_New\\data\\ATAC\\peaks\\fESC_R1_R2_selected.txt',row.names = FALSE,quote = FALSE,col.names = FALSE)
fESC_data = read.table('D:\\Workspace_New\\data\\ATAC\\peaks\\fESC_R1_R2_Common_peaks.txt')
fESC_data = fESC_data[,8:9]
fESC_M = as.matrix(fESC_data)
fESC_out = est.IDR(fESC_M, mu, sigma, rho, p, eps=0.001,max.ite = 20)
fESC.selected = select.IDR(fESC_M,fESC_out$IDR,0.0001)
fESC.selected
write.table(fESC.selected$x,'D:\\Workspace_New\\data\\ATAC\\peaks\\test.txt',row.names = FALSE,quote = FALSE,col.names = FALSE)
library(VennDiagram)
install.packages('VennDiagram')
library(VennDiagram)
install.packages('grid')
install.packages("grid")
savehistory("F:/xxli/data_analysis/Script_New/ATAC/R.history")
savehistory("F:/xxli/data_analysis/Script_New/ATAC/R.history")
