library("DESeq2")
data <- read.table("F:/work/ntESC_3Dreprogramming/Workspace_New/data/RNA/RNA_New/reads_count/All_merged_all_reps.csv", header=T, row.names=1, sep=",")
sample <- read.table("F:/work/ntESC_3Dreprogramming/Workspace_New/data/RNA/RNA_New/reads_count/All_sampleFile_all_reps.csv", header=T, row.names=1, com='', quote='', check.names=F, sep=",", colClasses="factor")
data <- data[rowSums(data)>2,]
ddsFullCountTable <- DESeqDataSetFromMatrix(countData = data,
        colData = sample,  design= ~ batch + conditions)

dds <- DESeq(ddsFullCountTable)

rld <- rlog(dds, blind=FALSE)
rlogMat <- assay(rld)
rlogMat <- limma::removeBatchEffect(rlogMat, c(sample$batch))

contrastV <- c("conditions", sampleA, sampleB)
res <- results(dds,  contrast=contrastV)

baseA <- counts(dds, normalized=TRUE)[, colData(dds)$conditions == sampleA]

if (is.vector(baseA)){
    baseMeanA <- as.data.frame(baseA)
} else {
    baseMeanA <- as.data.frame(rowMeans(baseA))
}
colnames(baseMeanA) <- sampleA
head(baseMeanA)


baseB <- counts(dds, normalized=TRUE)[, colData(dds)$conditions == sampleB]
if (is.vector(baseB)){
        baseMeanB <- as.data.frame(baseB)
} else {
        baseMeanB <- as.data.frame(rowMeans(baseB))
}
colnames(baseMeanB) <- sampleB
head(baseMeanB)

# 结果组合
res <- cbind(baseMeanA, baseMeanB, as.data.frame(res))
head(res)
# 增加ID信息
res <- cbind(Gene_ID=rownames(res), as.data.frame(res))
res$baseMean <- rowMeans(cbind(baseA, baseB))

# 校正后p-value为NA的复制为1
res$padj[is.na(res$padj)] <- 1

# 按pvalue排序, 把差异大的基因放前面
res <- res[order(res$pvalue),]
head(res)

res_de <- subset(res, res$padj<0.05)
res_de <- subset(res_de, res_de$log2FoldChange > 1.5 | res_de$log2FoldChange < -1.5) 

res_de <- merge(gtf,res_de,by="Gene_ID")
res_de <- res_de[, c('Gene_ID' , 'Gene_name' , 'Chr' , 'Strand' , 'Start' , 'End' , 'baseMean' , 'log2FoldChange' , 'lfcSE' , 'stat' , 'pvalue' , 'padj')]
write.table(as.data.frame(res_de), file='All_RNA_ESC_vs_NTs_diff_expression_q_0.05_fc1.5.csv', sep=",", quote=F, row.names=F)


##-----------------CCS、F35、F40、NT5、NT6_allReps---------------------------------
data <- read.table("F:/work/ntESC_3Dreprogramming/Workspace_New/data/RNA/RNA_New/reads_count/All_merged_all_reps.csv", header=T, row.names=1, sep=",")
sample <- read.table("F:/work/ntESC_3Dreprogramming/Workspace_New/data/RNA/RNA_New/reads_count/All_sampleFile_all_reps.csv", header=T, row.names=1, com='', quote='', check.names=F, sep=",", colClasses="factor")
data <- data[,c('CCS' , 'F35' , 'F40' , 'NT5' , 'NT6')]
data <- data[rowSums(data)>2,]

sample <- sample[c('CCS' , 'F35' , 'F40' , 'NT5' , 'NT6') , ]


ddsFullCountTable <- DESeqDataSetFromMatrix(countData = data,
        colData = sample,  design= ~ batch + conditions)

dds <- DESeq(ddsFullCountTable)

rld <- rlog(dds, blind=FALSE)
rlogMat <- assay(rld)
rlogMat <- limma::removeBatchEffect(rlogMat, c(sample$batch))


sampleA <- "ESC"
sampleB <- "NTs"

contrastV <- c("conditions", sampleA, sampleB)
res <- results(dds,  contrast=contrastV)

baseA <- counts(dds, normalized=TRUE)[, colData(dds)$conditions == sampleA]

if (is.vector(baseA)){
    baseMeanA <- as.data.frame(baseA)
} else {
    baseMeanA <- as.data.frame(rowMeans(baseA))
}
colnames(baseMeanA) <- sampleA
head(baseMeanA)


baseB <- counts(dds, normalized=TRUE)[, colData(dds)$conditions == sampleB]
if (is.vector(baseB)){
        baseMeanB <- as.data.frame(baseB)
} else {
        baseMeanB <- as.data.frame(rowMeans(baseB))
}
colnames(baseMeanB) <- sampleB
head(baseMeanB)

# 结果组合
res <- cbind(baseMeanA, baseMeanB, as.data.frame(res))
head(res)
# 增加ID信息
res <- cbind(Gene_ID=rownames(res), as.data.frame(res))
res$baseMean <- rowMeans(cbind(baseA, baseB))

# 校正后p-value为NA的复制为1
res$padj[is.na(res$padj)] <- 1

# 按pvalue排序, 把差异大的基因放前面
res <- res[order(res$pvalue),]
head(res)

res_de <- subset(res, res$padj<0.05)
res_de <- subset(res_de, res_de$log2FoldChange > 1.5 | res_de$log2FoldChange < -1.5) 

res_de <- merge(gtf,res_de,by="Gene_ID")
res_de <- res_de[, c('Gene_ID' , 'Gene_name' , 'Chr' , 'Strand' , 'Start' , 'End' , 'baseMean' , 'log2FoldChange' , 'lfcSE' , 'stat' , 'pvalue' , 'padj')]

write.table(as.data.frame(res_de), file='ESC_vs_NTs_diff_expression_q_0.05_fc1.5.csv', sep=",", quote=F, row.names=F)




##----------------------------------All_RNA_respective----------------------------------------
data <- read.table("F:/work/ntESC_3Dreprogramming/Workspace_New/data/RNA/RNA_New/reads_count/All_merged.csv", header=T, row.names=1, sep=",")
sample <- read.table("F:/work/ntESC_3Dreprogramming/Workspace_New/data/RNA/RNA_New/reads_count/All_sampleFile.csv", header=T, row.names=1, com='', quote='', check.names=F, sep=",", colClasses="factor")
data <- data[rowSums(data)>2,]
ddsFullCountTable <- DESeqDataSetFromMatrix(countData = data,
        colData = sample,  design= ~ batch + conditions)

dds <- DESeq(ddsFullCountTable)

rld <- rlog(dds, blind=FALSE)
rlogMat <- assay(rld)
rlogMat <- limma::removeBatchEffect(rlogMat, c(sample$batch))

contrastV <- c("conditions", sampleA, sampleB)
res <- results(dds,  contrast=contrastV)

baseA <- counts(dds, normalized=TRUE)[, colData(dds)$conditions == sampleA]

if (is.vector(baseA)){
    baseMeanA <- as.data.frame(baseA)
} else {
    baseMeanA <- as.data.frame(rowMeans(baseA))
}
colnames(baseMeanA) <- sampleA
head(baseMeanA)


baseB <- counts(dds, normalized=TRUE)[, colData(dds)$conditions == sampleB]
if (is.vector(baseB)){
        baseMeanB <- as.data.frame(baseB)
} else {
        baseMeanB <- as.data.frame(rowMeans(baseB))
}
colnames(baseMeanB) <- sampleB
head(baseMeanB)

# 结果组合
res <- cbind(baseMeanA, baseMeanB, as.data.frame(res))
head(res)
# 增加ID信息
res <- cbind(Gene_ID=rownames(res), as.data.frame(res))
res$baseMean <- rowMeans(cbind(baseA, baseB))

# 校正后p-value为NA的复制为1
res$padj[is.na(res$padj)] <- 1

# 按pvalue排序, 把差异大的基因放前面
res <- res[order(res$pvalue),]
head(res)

res_de <- subset(res, res$padj<0.07)
res_de <- subset(res_de, res_de$log2FoldChange > 1.5 | res_de$log2FoldChange < -1.5) 

res_de <- merge(gtf,res_de,by="Gene_ID")
res_de <- res_de[, c('Gene_ID' , 'Gene_name' , 'Chr' , 'Strand' , 'Start' , 'End' , 'baseMean' , 'log2FoldChange' , 'lfcSE' , 'stat' , 'pvalue' , 'padj')]
write.table(as.data.frame(res_de), file='All_RNA_ESC_vs_NTs_diff_expression_q_0.05_fc1.5.csv', sep=",", quote=F, row.names=F)


##-----------------CCS、F35、F40、NT5、NT6_respective---------------------------------
gtf <- read.table('E:/Data/literature_data/genome/gencode.vM15.chr_patch_hapl_scaff.annotation_1.gtf' , header = TRUE)
head(gtf)

data <- read.table("F:/work/ntESC_3Dreprogramming/Workspace_New/data/RNA/RNA_New/reads_count/All_merged.csv", header=T, row.names=1, sep=",")
sample <- read.table("F:/work/ntESC_3Dreprogramming/Workspace_New/data/RNA/RNA_New/reads_count/All_sampleFile.csv", header=T, row.names=1, com='', quote='', check.names=F, sep=",", colClasses="factor")
data <- data[,c('CCS_R1' , 'CCS_R2' , 'CCS_R3' , 'F35_R1' , 'F35_R2' , 'F35_R3' , 'F40_R1' , 'F40_R2' , 'F40_R3' , 'NT5_R1' , 'NT5_R2' , 'NT5_R3' , 'NT5_R4' , 'NT6_R1' , 'NT6_R2' , 'NT6_R3')]
data <- data[rowSums(data)>2,]

sample <- sample[c('CCS_R1' , 'CCS_R2' , 'CCS_R3' , 'F35_R1' , 'F35_R2' , 'F35_R3' , 'F40_R1' , 'F40_R2' , 'F40_R3' , 'NT5_R1' , 'NT5_R2' , 'NT5_R3' , 'NT5_R4' , 'NT6_R1' , 'NT6_R2' , 'NT6_R3') , ]


ddsFullCountTable <- DESeqDataSetFromMatrix(countData = data,
        colData = sample,  design= ~ batch + conditions)

dds <- DESeq(ddsFullCountTable)

rld <- rlog(dds, blind=FALSE)
rlogMat <- assay(rld)
rlogMat <- limma::removeBatchEffect(rlogMat, c(sample$batch))


sampleA <- "ESC"
sampleB <- "NTs"
contrastV <- c("conditions", sampleA, sampleB)
res <- results(dds,  contrast=contrastV)

baseA <- counts(dds, normalized=TRUE)[, colData(dds)$conditions == sampleA]

if (is.vector(baseA)){
    baseMeanA <- as.data.frame(baseA)
} else {
    baseMeanA <- as.data.frame(rowMeans(baseA))
}
colnames(baseMeanA) <- sampleA
head(baseMeanA)


baseB <- counts(dds, normalized=TRUE)[, colData(dds)$conditions == sampleB]
if (is.vector(baseB)){
        baseMeanB <- as.data.frame(baseB)
} else {
        baseMeanB <- as.data.frame(rowMeans(baseB))
}
colnames(baseMeanB) <- sampleB
head(baseMeanB)





# 结果组合
res <- cbind(baseMeanA, baseMeanB, as.data.frame(res))
head(res)
# 增加ID信息
res <- cbind(Gene_ID=rownames(res), as.data.frame(res))
res$baseMean <- rowMeans(cbind(baseA, baseB))

# 校正后p-value为NA的复制为1
res$padj[is.na(res$padj)] <- 1

# 按pvalue排序, 把差异大的基因放前面
res <- res[order(res$pvalue),]
head(res)

res['ENSMUSG00000003032.8',]

res_de <- subset(res, res$padj<0.05)
res_de <- subset(res_de, res_de$log2FoldChange > 1.5 | res_de$log2FoldChange < -1.5) 

res_de <- merge(gtf,res_de,by="Gene_ID")
res_de <- res_de[, c('Gene_ID' , 'Gene_name' , 'Chr' , 'Strand' , 'Start' , 'End' , 'baseMean' , 'log2FoldChange' , 'lfcSE' , 'stat' , 'pvalue' , 'padj')]

write.table(as.data.frame(res_de), file='F:/work/ntESC_3Dreprogramming/Workspace_New/data/RNA/RNA_New/diff_expression/diff_expression_q_0.05/RNA_CCS_vs_fESC_diff_expression_q_0.05.csv', sep=",", quote=F, row.names=F)




